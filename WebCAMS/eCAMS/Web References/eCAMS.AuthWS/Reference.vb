'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace eCAMS.AuthWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="AuthServiceSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class AuthService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetAuthorizationTicketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeSelectedUserPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetULOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdminUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetUserPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetValidateUserOTPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserOTPInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateUserOTPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserMFAFeatureParamsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmailUserOTPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.My.MySettings.Default.eCAMS_AuthWS_AuthService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetAuthorizationTicketCompleted As GetAuthorizationTicketCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserInfoCompleted As GetUserInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserCompleted As UpdateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePasswordCompleted As ChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeSelectedUserPasswordCompleted As ChangeSelectedUserPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetULCompleted As GetULCompletedEventHandler
        
        '''<remarks/>
        Public Event AdminUserCompleted As AdminUserCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetUserPasswordCompleted As ResetUserPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetValidateUserOTPCompleted As GetValidateUserOTPCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserOTPInfoCompleted As GetUserOTPInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateUserOTPCompleted As CreateUserOTPCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserMFAFeatureParamsCompleted As GetUserMFAFeatureParamsCompletedEventHandler
        
        '''<remarks/>
        Public Event EmailUserOTPCompleted As EmailUserOTPCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuthorizationTicket", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuthorizationTicket(ByVal myParam() As Object) As String
            Dim results() As Object = Me.Invoke("GetAuthorizationTicket", New Object() {myParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizationTicketAsync(ByVal myParam() As Object)
            Me.GetAuthorizationTicketAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuthorizationTicketAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetAuthorizationTicketOperationCompleted Is Nothing) Then
                Me.GetAuthorizationTicketOperationCompleted = AddressOf Me.OnGetAuthorizationTicketOperationCompleted
            End If
            Me.InvokeAsync("GetAuthorizationTicket", New Object() {myParam}, Me.GetAuthorizationTicketOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuthorizationTicketOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuthorizationTicketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuthorizationTicketCompleted(Me, New GetAuthorizationTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserInfo(ByVal myParam() As Object) As UserInformation
            Dim results() As Object = Me.Invoke("GetUserInfo", New Object() {myParam})
            Return CType(results(0),UserInformation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserInfoAsync(ByVal myParam() As Object)
            Me.GetUserInfoAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserInfoAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetUserInfoOperationCompleted Is Nothing) Then
                Me.GetUserInfoOperationCompleted = AddressOf Me.OnGetUserInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUserInfo", New Object() {myParam}, Me.GetUserInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserInfoCompleted(Me, New GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateUser(ByVal myParam() As Object) As UserInformation
            Dim results() As Object = Me.Invoke("UpdateUser", New Object() {myParam})
            Return CType(results(0),UserInformation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal myParam() As Object)
            Me.UpdateUserAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.UpdateUserOperationCompleted Is Nothing) Then
                Me.UpdateUserOperationCompleted = AddressOf Me.OnUpdateUserOperationCompleted
            End If
            Me.InvokeAsync("UpdateUser", New Object() {myParam}, Me.UpdateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserCompleted(Me, New UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePassword(ByVal myParam() As Object) As UserInformation
            Dim results() As Object = Me.Invoke("ChangePassword", New Object() {myParam})
            Return CType(results(0),UserInformation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal myParam() As Object)
            Me.ChangePasswordAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.ChangePasswordOperationCompleted Is Nothing) Then
                Me.ChangePasswordOperationCompleted = AddressOf Me.OnChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangePassword", New Object() {myParam}, Me.ChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePasswordCompleted(Me, New ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeSelectedUserPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeSelectedUserPassword(ByVal myParam() As Object) As Object
            Dim results() As Object = Me.Invoke("ChangeSelectedUserPassword", New Object() {myParam})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeSelectedUserPasswordAsync(ByVal myParam() As Object)
            Me.ChangeSelectedUserPasswordAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeSelectedUserPasswordAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.ChangeSelectedUserPasswordOperationCompleted Is Nothing) Then
                Me.ChangeSelectedUserPasswordOperationCompleted = AddressOf Me.OnChangeSelectedUserPasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangeSelectedUserPassword", New Object() {myParam}, Me.ChangeSelectedUserPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeSelectedUserPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeSelectedUserPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeSelectedUserPasswordCompleted(Me, New ChangeSelectedUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUL(ByVal myParam() As Object) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUL", New Object() {myParam})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetULAsync(ByVal myParam() As Object)
            Me.GetULAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetULAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetULOperationCompleted Is Nothing) Then
                Me.GetULOperationCompleted = AddressOf Me.OnGetULOperationCompleted
            End If
            Me.InvokeAsync("GetUL", New Object() {myParam}, Me.GetULOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetULOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetULCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetULCompleted(Me, New GetULCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdminUser(ByVal myParam() As Object) As Object
            Dim results() As Object = Me.Invoke("AdminUser", New Object() {myParam})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdminUserAsync(ByVal myParam() As Object)
            Me.AdminUserAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdminUserAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.AdminUserOperationCompleted Is Nothing) Then
                Me.AdminUserOperationCompleted = AddressOf Me.OnAdminUserOperationCompleted
            End If
            Me.InvokeAsync("AdminUser", New Object() {myParam}, Me.AdminUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdminUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdminUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdminUserCompleted(Me, New AdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetUserPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResetUserPassword(ByVal myParam() As Object) As Object
            Dim results() As Object = Me.Invoke("ResetUserPassword", New Object() {myParam})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ResetUserPasswordAsync(ByVal myParam() As Object)
            Me.ResetUserPasswordAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetUserPasswordAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.ResetUserPasswordOperationCompleted Is Nothing) Then
                Me.ResetUserPasswordOperationCompleted = AddressOf Me.OnResetUserPasswordOperationCompleted
            End If
            Me.InvokeAsync("ResetUserPassword", New Object() {myParam}, Me.ResetUserPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetUserPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetUserPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetUserPasswordCompleted(Me, New ResetUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidateUserOTP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetValidateUserOTP(ByVal myParam() As Object) As String
            Dim results() As Object = Me.Invoke("GetValidateUserOTP", New Object() {myParam})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetValidateUserOTPAsync(ByVal myParam() As Object)
            Me.GetValidateUserOTPAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetValidateUserOTPAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetValidateUserOTPOperationCompleted Is Nothing) Then
                Me.GetValidateUserOTPOperationCompleted = AddressOf Me.OnGetValidateUserOTPOperationCompleted
            End If
            Me.InvokeAsync("GetValidateUserOTP", New Object() {myParam}, Me.GetValidateUserOTPOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetValidateUserOTPOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetValidateUserOTPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetValidateUserOTPCompleted(Me, New GetValidateUserOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserOTPInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserOTPInfo(ByVal myParam() As Object) As UserOTPInformation
            Dim results() As Object = Me.Invoke("GetUserOTPInfo", New Object() {myParam})
            Return CType(results(0),UserOTPInformation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserOTPInfoAsync(ByVal myParam() As Object)
            Me.GetUserOTPInfoAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserOTPInfoAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetUserOTPInfoOperationCompleted Is Nothing) Then
                Me.GetUserOTPInfoOperationCompleted = AddressOf Me.OnGetUserOTPInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUserOTPInfo", New Object() {myParam}, Me.GetUserOTPInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserOTPInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserOTPInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserOTPInfoCompleted(Me, New GetUserOTPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUserOTP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateUserOTP(ByVal myParam() As Object) As UserInformation
            Dim results() As Object = Me.Invoke("CreateUserOTP", New Object() {myParam})
            Return CType(results(0),UserInformation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateUserOTPAsync(ByVal myParam() As Object)
            Me.CreateUserOTPAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateUserOTPAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.CreateUserOTPOperationCompleted Is Nothing) Then
                Me.CreateUserOTPOperationCompleted = AddressOf Me.OnCreateUserOTPOperationCompleted
            End If
            Me.InvokeAsync("CreateUserOTP", New Object() {myParam}, Me.CreateUserOTPOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateUserOTPOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateUserOTPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateUserOTPCompleted(Me, New CreateUserOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserMFAFeatureParams", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserMFAFeatureParams(ByVal myParam() As Object) As UserMFAFeatureParam
            Dim results() As Object = Me.Invoke("GetUserMFAFeatureParams", New Object() {myParam})
            Return CType(results(0),UserMFAFeatureParam)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserMFAFeatureParamsAsync(ByVal myParam() As Object)
            Me.GetUserMFAFeatureParamsAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserMFAFeatureParamsAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.GetUserMFAFeatureParamsOperationCompleted Is Nothing) Then
                Me.GetUserMFAFeatureParamsOperationCompleted = AddressOf Me.OnGetUserMFAFeatureParamsOperationCompleted
            End If
            Me.InvokeAsync("GetUserMFAFeatureParams", New Object() {myParam}, Me.GetUserMFAFeatureParamsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserMFAFeatureParamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserMFAFeatureParamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserMFAFeatureParamsCompleted(Me, New GetUserMFAFeatureParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmailUserOTP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmailUserOTP(ByVal myParam() As Object) As Object
            Dim results() As Object = Me.Invoke("EmailUserOTP", New Object() {myParam})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmailUserOTPAsync(ByVal myParam() As Object)
            Me.EmailUserOTPAsync(myParam, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmailUserOTPAsync(ByVal myParam() As Object, ByVal userState As Object)
            If (Me.EmailUserOTPOperationCompleted Is Nothing) Then
                Me.EmailUserOTPOperationCompleted = AddressOf Me.OnEmailUserOTPOperationCompleted
            End If
            Me.InvokeAsync("EmailUserOTP", New Object() {myParam}, Me.EmailUserOTPOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmailUserOTPOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmailUserOTPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmailUserOTPCompleted(Me, New EmailUserOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class UserMFAFeatureParam
        
        Private userIDField As Integer
        
        Private clientIDField As String
        
        Private featureIDField As Integer
        
        Private featureNameField As String
        
        Private oTPEmailDomainNameListField() As String
        
        Private oTPLengthField As Integer
        
        Private oTPExpiryMinuteField As Integer
        
        Private oTPMaxNoRetriesField As Integer
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientID() As String
            Get
                Return Me.clientIDField
            End Get
            Set
                Me.clientIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FeatureID() As Integer
            Get
                Return Me.featureIDField
            End Get
            Set
                Me.featureIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FeatureName() As String
            Get
                Return Me.featureNameField
            End Get
            Set
                Me.featureNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OTPEmailDomainNameList() As String()
            Get
                Return Me.oTPEmailDomainNameListField
            End Get
            Set
                Me.oTPEmailDomainNameListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OTPLength() As Integer
            Get
                Return Me.oTPLengthField
            End Get
            Set
                Me.oTPLengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OTPExpiryMinute() As Integer
            Get
                Return Me.oTPExpiryMinuteField
            End Get
            Set
                Me.oTPExpiryMinuteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OTPMaxNoRetries() As Integer
            Get
                Return Me.oTPMaxNoRetriesField
            End Get
            Set
                Me.oTPMaxNoRetriesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class UserOTPInformation
        
        Private userIDField As Integer
        
        Private passcodeField() As Byte
        
        Private createdDateTimeField As Date
        
        Private expiryDateTimeField As Date
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Passcode() As Byte()
            Get
                Return Me.passcodeField
            End Get
            Set
                Me.passcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedDateTime() As Date
            Get
                Return Me.createdDateTimeField
            End Get
            Set
                Me.createdDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpiryDateTime() As Date
            Get
                Return Me.expiryDateTimeField
            End Get
            Set
                Me.expiryDateTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class UserInformation
        
        Private userIDField As Integer
        
        Private emailAddressField As String
        
        Private passwordField() As Byte
        
        Private userNameField As String
        
        Private phoneField As String
        
        Private faxField As String
        
        Private fSPIDField As Integer
        
        Private isActiveField As Boolean
        
        Private updateTimeField As Date
        
        Private menuSetField As String
        
        Private expiryDateField As Date
        
        Private clientIDsField As String
        
        Private loginDateTimeField As Date
        
        Private isLoginAsClientField As Boolean
        
        Private moduleListField As String
        
        Private canUseNewPCAMSField As Boolean
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Password() As Byte()
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FSPID() As Integer
            Get
                Return Me.fSPIDField
            End Get
            Set
                Me.fSPIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdateTime() As Date
            Get
                Return Me.updateTimeField
            End Get
            Set
                Me.updateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MenuSet() As String
            Get
                Return Me.menuSetField
            End Get
            Set
                Me.menuSetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpiryDate() As Date
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientIDs() As String
            Get
                Return Me.clientIDsField
            End Get
            Set
                Me.clientIDsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoginDateTime() As Date
            Get
                Return Me.loginDateTimeField
            End Get
            Set
                Me.loginDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsLoginAsClient() As Boolean
            Get
                Return Me.isLoginAsClientField
            End Get
            Set
                Me.isLoginAsClientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModuleList() As String
            Get
                Return Me.moduleListField
            End Get
            Set
                Me.moduleListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CanUseNewPCAMS() As Boolean
            Get
                Return Me.canUseNewPCAMSField
            End Get
            Set
                Me.canUseNewPCAMSField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAuthorizationTicketCompletedEventHandler(ByVal sender As Object, ByVal e As GetAuthorizationTicketCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuthorizationTicketCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserInformation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserInformation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateUserCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserInformation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserInformation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserInformation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserInformation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ChangeSelectedUserPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeSelectedUserPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeSelectedUserPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetULCompletedEventHandler(ByVal sender As Object, ByVal e As GetULCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetULCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AdminUserCompletedEventHandler(ByVal sender As Object, ByVal e As AdminUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdminUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ResetUserPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ResetUserPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ResetUserPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetValidateUserOTPCompletedEventHandler(ByVal sender As Object, ByVal e As GetValidateUserOTPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetValidateUserOTPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserOTPInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserOTPInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserOTPInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserOTPInformation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserOTPInformation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CreateUserOTPCompletedEventHandler(ByVal sender As Object, ByVal e As CreateUserOTPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateUserOTPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserInformation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserInformation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserMFAFeatureParamsCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserMFAFeatureParamsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserMFAFeatureParamsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserMFAFeatureParam
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserMFAFeatureParam)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub EmailUserOTPCompletedEventHandler(ByVal sender As Object, ByVal e As EmailUserOTPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmailUserOTPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
End Namespace
