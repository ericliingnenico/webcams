BARS = [212222, 222122, 222221, 121223, 121322, 131222, 122213, 122312, 132212, 221213, 221312, 231212, 112232, 122132, 122231, 113222, 123122, 123221, 223211, 221132, 221231, 213212, 223112, 312131, 311222, 321122, 321221, 312212, 322112, 322211, 212123, 212321, 232121, 111323, 131123, 131321, 112313, 132113, 132311, 211313, 231113, 231311, 112133, 112331, 132131, 113123, 113321, 133121, 313121, 211331, 231131, 213113, 213311, 213131, 311123, 311321, 331121, 312113, 312311, 332111, 314111, 221411, 431111, 111224, 111422, 121124, 121421, 141122, 141221, 112214, 112412,
122114, 122411, 142112, 142211, 241211, 221114, 413111, 241112, 134111, 111242, 121142, 121241, 114212, 124112, 124211, 411212, 421112, 421211, 212141, 214121, 412121, 111143, 111341, 131141, 114113, 114311, 411113, 411311, 113141, 114131, 311141, 411131, 211412, 211214, 211232, 23311120]; START_BASE = 38; STOP = 106; var fromType128 = { A: function (a) { return 0 <= a && 32 > a ? a + 64 : 32 <= a && 96 > a ? a - 32 : a }, B: function (a) { return 32 <= a && 128 > a ? a - 32 : a }, C: function (a) { return a } };
function code128(a, b) { 2 > arguments.length && (b = code128Detect(a)); "C" == b && 1 == a.length % 2 && (a = "0" + a); var c = parseBarcode128(a, b); return bar2html128(c.join("")) } function code128Detect(a) { return /^[0-9]+$/.test(a) ? "C" : /[a-z]/.test(a) ? "B" : "A" }
function parseBarcode128(a, b) { var c = []; c.add = function (a) { var b = BARS[a]; this.check = 0 == this.length ? a : this.check + a * this.length; this.push(b || format("UNDEFINED: %1->%2", a, b)) }; c.add(START_BASE + b.charCodeAt(0)); for (var d = 0; d < a.length; d++) { var e = "C" == b ? +a.substr(d++, 2) : a.charCodeAt(d); converted = fromType128[b](e); if (isNaN(converted) || 0 > converted || 106 < converted) throw Error(format("Unrecognized character (%1) at position %2 in code '%3'.", e, d, a)); c.add(converted) } c.push(BARS[c.check % 103], BARS[STOP]); return c }
function format(a) { var b = arguments; return (a + "").replace(RegExp("%([1-" + (arguments.length - 1) + "])", "g"), function (a, d) { return b[d] }) } function bar2html128(a) { for (var b = 0, c = []; b < a.length; b += 2) c.push('<div class="bar' + a.charAt(b) + " space" + a.charAt(b + 1) + '"></div>'); return c.join("") };